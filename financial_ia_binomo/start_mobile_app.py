#!/usr/bin/env python3
"""
Script para iniciar la aplicaci√≥n m√≥vil IA Financiera
Configurado para IP espec√≠fica: 192.168.100.17:8080
"""

import os
import sys
import subprocess
import time
import requests
import socket
from datetime import datetime

# Configuraci√≥n espec√≠fica para tu red
LOCAL_IP = "192.168.100.17"
API_PORT = 8080
MOBILE_PORT = 8080

def get_local_ip():
    """Obtener la IP local de la m√°quina"""
    try:
        # Conectar a un servidor externo para obtener la IP local
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        ip = s.getsockname()[0]
        s.close()
        return ip
    except:
        return "localhost"

def check_api_server():
    """Verificar si el servidor API est√° ejecut√°ndose"""
    try:
        response = requests.get(f"http://{LOCAL_IP}:{API_PORT}/health", timeout=3)
        return response.status_code == 200
    except:
        return False

def start_api_server():
    """Iniciar el servidor API si no est√° ejecut√°ndose"""
    if not check_api_server():
        print("üöÄ Iniciando servidor API...")
        try:
            # Iniciar servidor API en segundo plano
            subprocess.Popen([sys.executable, 'start_api.py'], 
                           stdout=subprocess.DEVNULL, 
                           stderr=subprocess.DEVNULL)
            
            # Esperar a que inicie
            for i in range(10):
                time.sleep(1)
                if check_api_server():
                    print("‚úÖ Servidor API iniciado correctamente")
                    return True
                print(f"‚è≥ Esperando servidor API... ({i+1}/10)")
            
            print("‚ùå No se pudo iniciar el servidor API")
            return False
        except Exception as e:
            print(f"‚ùå Error al iniciar servidor API: {e}")
            return False
    else:
        print("‚úÖ Servidor API ya est√° ejecut√°ndose")
        return True

def start_mobile_app():
    """Iniciar la aplicaci√≥n m√≥vil"""
    print("üì± Iniciando Aplicaci√≥n M√≥vil IA Financiera...")
    
    # Cambiar al directorio de la app m√≥vil
    mobile_app_dir = os.path.join(os.path.dirname(__file__), 'mobile_app')
    os.chdir(mobile_app_dir)
    
    print(f"üåê Aplicaci√≥n disponible en:")
    print(f"   ‚Ä¢ Local: http://localhost:{MOBILE_PORT}")
    print(f"   ‚Ä¢ Red: http://{LOCAL_IP}:{MOBILE_PORT}")
    print(f"   ‚Ä¢ API: http://{LOCAL_IP}:{API_PORT}")
    print(f"üì± Accede desde tu m√≥vil usando: http://{LOCAL_IP}:{MOBILE_PORT}")
    print(f"üîó C√≥digo QR disponible en: http://{LOCAL_IP}:{MOBILE_PORT}/qr")
    print(f"üìä API Status: http://{LOCAL_IP}:{MOBILE_PORT}/api/status")
    print(f"‚è∞ Iniciado: {datetime.now().strftime('%H:%M:%S')}")
    print("=" * 60)
    print(f"üéØ URL para m√≥vil: http://{LOCAL_IP}:{MOBILE_PORT}")
    print("=" * 60)
    
    # Iniciar aplicaci√≥n m√≥vil
    try:
        subprocess.run([sys.executable, 'app.py'])
    except KeyboardInterrupt:
        print("\nüõë Aplicaci√≥n m√≥vil detenida")
    except Exception as e:
        print(f"‚ùå Error al iniciar aplicaci√≥n m√≥vil: {e}")

def main():
    """Funci√≥n principal"""
    print("ü§ñ IA Financiera Binomo - Aplicaci√≥n M√≥vil")
    print("=" * 60)
    print(f"üìç IP Configurada: {LOCAL_IP}")
    print(f"üîå Puerto API: {API_PORT}")
    print(f"üì± Puerto M√≥vil: {MOBILE_PORT}")
    print("=" * 60)
    
    # Verificar e iniciar servidor API
    if not start_api_server():
        print("‚ö†Ô∏è  Continuando sin servidor API...")
        print("üí° Ejecuta 'python start_api.py' en otra terminal")
    
    # Iniciar aplicaci√≥n m√≥vil
    start_mobile_app()

if __name__ == '__main__':
    main() 